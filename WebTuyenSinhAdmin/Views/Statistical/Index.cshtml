@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="content-wrapper">
    <div class="row mb-4">
        <div class="col-lg-4 grid-margin grid-margin-lg-0 stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Nguyện Vọng 1</h4>
                    <canvas id="doughnutChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4 grid-margin grid-margin-lg-0 stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Nguyện Vọng 2</h4>
                    <canvas id="pieChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4 grid-margin grid-margin-lg-0 stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Nguyện Vọng 3</h4>
                    <canvas id="pieChartThree"></canvas>

                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Thông kê theo đợt tuyển sinh</h4>
                    <canvas id="lineChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Thông kê theo ngành</h4>
                    <canvas id="areaChart"></canvas>
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Thông kê theo ngày</h4>
                    <canvas id="areaChart1"></canvas>
                </div>
            </div>
        </div>


    </div>
    <div class="row">
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Thống kê theo tháng</h4>
                    <canvas id="barChart1"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Thống kê theo năm</h4>
                    <canvas id="barChart"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Thống kê nguyện vọng</h4>
                    <canvas id="barChart2"></canvas>
                </div>
            </div>
        </div>
    </div>

</div>

<script>

    $(document).ready(function () {
        $.ajax({
            async: false,
            url: "/Statistical/Statistical",
            type: 'GET',
        }).done(function (res) {
            console.log(res)
            LoadData(res)
         
        });

    })
   function LoadData (res) {
        /* ChartJS
         * -------
         * Data and config for chartjs
         */
        'use strict';
        var data = {
            labels: res.statisticalYear.name,
            datasets: [{
                label: 'Lượt đăng ký ',
                data: res.statisticalYear.values,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                fill: false
            }]
       };
       var dataMonth = {
           labels: res.statisticalMonth.name,
           datasets: [{
               label: 'Lượt đăng ký ',
               data: res.statisticalMonth.values,
             //  backgroundColor: 'rgb(23, 125, 255)',
            //   borderColor: 'rgb(23, 125, 255)',
               backgroundColor: [
                   'rgba(255, 206, 86, 0.2)',
                   'rgba(75, 192, 192, 0.2)',
                   'rgba(153, 102, 255, 0.2)',
                   'rgba(255, 159, 64, 0.2)',
                   'rgba(255, 99, 132, 0.2)',
                   'rgba(54, 162, 235, 0.2)',
               ],
               borderColor: [
                   'rgba(255, 206, 86, 1)',
                   'rgba(75, 192, 192, 1)',
                   'rgba(153, 102, 255, 1)',
                   'rgba(255, 159, 64, 1)',
                   'rgba(255,99,132,1)',
                   'rgba(54, 162, 235, 1)',
               ],
               borderWidth: 1,
               fill: false
           }]
       };
       var dataWishs = {
           labels: res.statisticalWish.name,
           datasets: [{
               label: 'Lượt đăng ký ',
               data: res.statisticalWish.values,
               //  backgroundColor: 'rgb(23, 125, 255)',
               //   borderColor: 'rgb(23, 125, 255)',
               backgroundColor: [
                   'rgba(255, 206, 86, 0.2)',
                   'rgba(75, 192, 192, 0.2)',
                   'rgba(153, 102, 255, 0.2)',
                   'rgba(255, 159, 64, 0.2)',
                   'rgba(255, 99, 132, 0.2)',
                   'rgba(54, 162, 235, 0.2)',
               ],
               borderColor: [
                   'rgba(255, 206, 86, 1)',
                   'rgba(75, 192, 192, 1)',
                   'rgba(153, 102, 255, 1)',
                   'rgba(255, 159, 64, 1)',
                   'rgba(255,99,132,1)',
                   'rgba(54, 162, 235, 1)',
               ],
               borderWidth: 1,
               fill: false
           }]
       };
       var dataAdmisstion = {
           labels: res.statisticalAdmisstion.name,
           datasets: [{
               label: 'Thông kê các ngành',
               data: res.statisticalAdmisstion.values,
               backgroundColor: [
                  
                 
                   'rgba(153, 102, 255, 0.2)',
                   'rgba(255, 159, 64, 0.2)',
                   'rgba(255, 99, 132, 0.2)',
                   'rgba(54, 162, 235, 0.2)',
                   'rgba(255, 206, 86, 0.2)',
                   'rgba(75, 192, 192, 0.2)',
               ],
               borderColor: [
                
                  
                   'rgba(153, 102, 255, 1)',
                   'rgba(255, 159, 64, 1)',
                   'rgba(255,99,132,1)',
                   'rgba(54, 162, 235, 1)',
                   'rgba(255, 206, 86, 1)',
                   'rgba(75, 192, 192, 1)',
               ],
               borderWidth: 2,
               fill: false
           }]
       };
        var multiLineData = {
            labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
            datasets: [{
                label: 'Dataset 1',
                data: [12, 19, 3, 5, 2, 3],
                borderColor: [
                    '#587ce4'
                ],
                borderWidth: 2,
                fill: false
            },
            {
                label: 'Dataset 2',
                data: [5, 23, 7, 12, 42, 23],
                borderColor: [
                    '#ede190'
                ],
                borderWidth: 2,
                fill: false
            },
            {
                label: 'Dataset 3',
                data: [15, 10, 21, 32, 12, 33],
                borderColor: [
                    '#f44252'
                ],
                borderWidth: 2,
                fill: false
            }
            ]
        };
        var options = {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            },
            legend: {
                display: false
            },
            elements: {
                point: {
                    radius: 0
                }
            }

        };
        var doughnutOne = {
            datasets: [{
                data: res.wishOne.values,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.5)',
                    'rgba(54, 162, 235, 0.5)',
                    'rgba(255, 206, 86, 0.5)',
                    'rgba(75, 192, 192, 0.5)',
                    'rgba(153, 102, 255, 0.5)',
                    'rgba(255, 159, 64, 0.5)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
            }],

            // These labels appear in the legend and in the tooltips when hovering different arcs
            labels: res.wishOne.name
       };
       var doughnutTwo = {
           datasets: [{
               data: res.wishTwo.values,
               backgroundColor: [
                   
                   'rgba(54, 162, 235, 0.5)',
                   'rgba(255, 206, 86, 0.5)',
                   'rgba(75, 192, 192, 0.5)',
                   'rgba(153, 102, 255, 0.5)',
                   'rgba(255, 159, 64, 0.5)',
                   `rgba(255, 99, 132, 0.5)`
               ],
               borderColor: [
                
                   'rgba(54, 162, 235, 1)',
                   'rgba(255, 206, 86, 1)',
                   'rgba(75, 192, 192, 1)',
                   'rgba(153, 102, 255, 1)',
                   'rgba(255, 159, 64, 1)',
                   'rgba(255,99,132,1)',
               ],
           }],

           // These labels appear in the legend and in the tooltips when hovering different arcs
           labels: res.wishTwo.name
       };
       var doughnutThree = {
           datasets: [{
               data: res.wishThree.values,
               backgroundColor: [
             
             
                   'rgba(255, 206, 86, 0.5)',
                   'rgba(75, 192, 192, 0.5)',
                   'rgba(153, 102, 255, 0.5)',
                   'rgba(255, 159, 64, 0.5)',
                   'rgba(255, 99, 132, 0.5)',
                   'rgba(54, 162, 235, 0.5)'
               ],
               borderColor: [
               
              
                   'rgba(255, 206, 86, 1)',
                   'rgba(75, 192, 192, 1)',
                   'rgba(153, 102, 255, 1)',
                   'rgba(255, 159, 64, 1)',
                   'rgba(255,99,132,1)',
                   'rgba(54, 162, 235, 1)'
               ],
           }],

           // These labels appear in the legend and in the tooltips when hovering different arcs
           labels: res.wishThree.name
       };
        var doughnutPieOptions = {
            responsive: true,
            animation: {
                animateScale: true,
                animateRotate: true
            }
        };
        var areaData = {
            labels: res.statisticalMajor.name,
            datasets: [{
                label: '# Biểu đồ thống kê theo ngành',
                data: res.statisticalMajor.values,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                fill: true, // 3: no fill
            }]
        };
       var areaDataDate = {
           labels: res.statisticalDate.name,
           datasets: [{
               label: '# Biểu đồ thống kê theo ngày',
               data: res.statisticalDate.values,
               backgroundColor: [
        
                   'rgba(255, 159, 64, 0.2)',
                   'rgba(255, 99, 132, 0.2)',
                   'rgba(54, 162, 235, 0.2)',
                   'rgba(255, 206, 86, 0.2)',
                   'rgba(75, 192, 192, 0.2)',
                   'rgba(153, 102, 255, 0.2)',
               ],
               borderColor: [
             
                   'rgba(255, 159, 64, 1)',
                   'rgba(255,99,132,1)',
                   'rgba(54, 162, 235, 1)',
                   'rgba(255, 206, 86, 1)',
                   'rgba(75, 192, 192, 1)',
                   'rgba(153, 102, 255, 1)',
               ],
               borderWidth: 1,
               fill: true, // 3: no fill
           }]
       };

        var areaOptions = {
            plugins: {
                filler: {
                    propagate: true
                }
            }
        }


        var scatterChartData = {
            datasets: [{
                label: 'First Dataset',
                data: [{
                    x: -10,
                    y: 0
                },
                {
                    x: 0,
                    y: 3
                },
                {
                    x: -25,
                    y: 5
                },
                {
                    x: 40,
                    y: 5
                }
                ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)'
                ],
                borderWidth: 1
            },
            {
                label: 'Second Dataset',
                data: [{
                    x: 10,
                    y: 5
                },
                {
                    x: 20,
                    y: -30
                },
                {
                    x: -25,
                    y: 15
                },
                {
                    x: -10,
                    y: 5
                }
                ],
                backgroundColor: [
                    'rgba(54, 162, 235, 0.2)',
                ],
                borderColor: [
                    'rgba(54, 162, 235, 1)',
                ],
                borderWidth: 1
            }
            ]
        }

        var scatterChartOptions = {
            scales: {
                xAxes: [{
                    type: 'linear',
                    position: 'bottom'
                }]
            }
        }
        // Get context with jQuery - using jQuery's .get() method.
        if ($("#barChart").length) {
            var barChartCanvas = $("#barChart").get(0).getContext("2d");
            // This will get the first returned node in the jQuery collection.
            var barChart = new Chart(barChartCanvas, {
                type: 'bar',
                data: data,
                options: options
            });
       }
       if ($("#barChart1").length) {
           var barChartCanvas = $("#barChart1").get(0).getContext("2d");
           // This will get the first returned node in the jQuery collection.
           var barChart = new Chart(barChartCanvas, {
               type: 'bar',
               data: dataMonth,
               options: options
           });
       }
       if ($("#barChart2").length) {
           var barChartCanvas = $("#barChart2").get(0).getContext("2d");
           // This will get the first returned node in the jQuery collection.
           var barChart = new Chart(barChartCanvas, {
               type: 'bar',
               data: dataWishs,
               options: options
           });
       }
       

        if ($("#lineChart").length) {
            var lineChartCanvas = $("#lineChart").get(0).getContext("2d");
            var lineChart = new Chart(lineChartCanvas, {
                type: 'bar',
                data: dataAdmisstion,
                options: options
            });
        }

        if ($("#linechart-multi").length) {
            var multiLineCanvas = $("#linechart-multi").get(0).getContext("2d");
            var lineChart = new Chart(multiLineCanvas, {
                type: 'line',
                data: multiLineData,
                options: options
            });
        }

        if ($("#areachart-multi").length) {
            var multiAreaCanvas = $("#areachart-multi").get(0).getContext("2d");
            var multiAreaChart = new Chart(multiAreaCanvas, {
                type: 'line',
                data: multiAreaData,
                options: multiAreaOptions
            });
        }

        if ($("#doughnutChart").length) {
            var doughnutChartCanvas = $("#doughnutChart").get(0).getContext("2d");
            var doughnutChart = new Chart(doughnutChartCanvas, {
                type: 'doughnut',
                data: doughnutOne,
                options: doughnutPieOptions
            });
        }

        if ($("#pieChart").length) {
            var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
            var pieChart = new Chart(pieChartCanvas, {
                type: 'pie',
                data: doughnutTwo,
                options: doughnutPieOptions
            });
       }
       if ($("#pieChartThree").length) {
           var pieChartCanvas = $("#pieChartThree").get(0).getContext("2d");
           var pieChart = new Chart(pieChartCanvas, {
               type: 'doughnut',
               data: doughnutThree,
               options: doughnutPieOptions
           });
       }
       

        if ($("#areaChart1").length) {
            var areaChartCanvas = $("#areaChart1").get(0).getContext("2d");
            var areaChart = new Chart(areaChartCanvas, {
                type: 'line',
                data: areaDataDate,
                options: areaOptions
            });
       }
       if ($("#areaChart").length) {
           var areaChartCanvas = $("#areaChart").get(0).getContext("2d");
           var areaChart = new Chart(areaChartCanvas, {
               type: 'line',
               data: areaData,
               options: areaOptions
           });
       }
       

        if ($("#scatterChart").length) {
            var scatterChartCanvas = $("#scatterChart").get(0).getContext("2d");
            var scatterChart = new Chart(scatterChartCanvas, {
                type: 'scatter',
                data: scatterChartData,
                options: scatterChartOptions
            });
        }


    };</script>