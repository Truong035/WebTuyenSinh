
@{

}

@using WebTuyenSinh.Data.Entityes;
@model IEnumerable<School>
<div class="modal " id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="use-form">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Thông Tin Tài Khoản</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">     
                        <input required type="text" class="form-control" id="UserName" placeholder="Tên Trường">
                    </div>
                    <div class="row">
                        <div class="col">
                            <input required type="email" class="form-control" id="Email" placeholder="Mã Tỉnh">
                        </div>
                        <div class="col">
                            <input required type="email" class="form-control" id="Email" placeholder="Mã ">
                        </div>
                        <div class="col">
                            <input required type="email" class="form-control" id="Email" placeholder="Email">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="idRole">Chức vụ</label>
                        <select required class="form-control form-control-sm" id="idRole">
                            <option value="">Vui lòng chọn </option>
                  
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="col-md-12">
    <div class="card">
        <div class="m-3">
            <div class="d-flex align-items-center">
                <h4 class="card-title">Danh Sách Các Trường</h4>
                <div class="ml-auto">
                    <a asp-controller="ManagerSchool" asp-action="Create" class="btn btn-primary">
                        <i class="ti-plus"></i>
                        Thêm Mới
                    </a>
                    <button id="btnNhan" onclick="$('#txtFile').trigger( 'click' )" class="btn btn-primary btn-round ml-auto" data-target="#addRowModal">
                        <i class="ti-export"></i>
                        Tải File
                    </button>
                    <a class="btn btn-primary btn-round ml-auto" href="~/dowload/BieuMauTruong.xls" download>
                        <i class="ti-download"></i>
                        Dowload File
                    </a>
                    <input id="txtFile" onchange="readURL(this);" hidden type="file" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <form method="get" asp-controller="ManagerSchool" asp-action="Index">
                    <div class="d-flex align-items-center">
                        <div class="ml-auto">
                            <input type="text" value="@ViewBag.Search" name="ShoolName" class="form-control" placeholder="Tim kiếm" aria-label="Recipient's username" aria-describedby="button-addon2">
                        </div>
                    </div>
                    <table id="" class="table-striped  table-hover display expandable-table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Mã Trường</th>
                                <th>Tên Trường</th>
                                <th>Quận Huyện</th>
                                <th>Tỉnh</th>
                                <th>Khu Vực</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="tbbody">
                            @foreach (var item in Model)
                            {

                                @try
                                {
                                    <tr id="@item.id">
                                        <td>@item.idShool</td>
                                        <td>@item.NameShool</td>
                                        <td>@item.NameDistrict</td>
                                        <td>@item.NameConscious</td>
                                        <td>@item.Area</td>
                                        <td>
                                            <div class="form-button-action">
                                                <a   class="btn  btn-icon-text text-primary  " href="/ManagerSchool/Update/@item.id">
                                                    <i class="ti-pencil-alt"></i>
                                                </a>
                                                <button type="button" name="Delete" data-toggle="tooltip" title="" class="btn  btn-icon-text text-danger" data-original-title="Remove">
                                                    <i class="ti-close"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                catch { }

                            }
                        </tbody>
                    </table>
                    <br />
                    <div class="d-flex align-items-center">
                        <div class="ml-auto">
                            <ul class="pagination">
                                @{
                                    int numberPage = ViewBag.numberPage;
                                    int pageCurrent = ViewBag.pageCurrent;
                                    int offset = 2;//number display page


                                    //config FirstLink
                                    if (pageCurrent > 1)
                                    {
                                        int prevPage = pageCurrent - 1;
                                        var PrevLink = new Dictionary<string, string> { { "page", prevPage.ToString() } };
                                        <li><a asp-controller="ManagerSchool" asp-action="Index" asp-all-route-data="PrevLink">Prev Link</a></li>
                                    }

                                    int from = pageCurrent - offset;
                                    int to = pageCurrent + offset;
                                    if (from <= 0)
                                    {
                                        from = 1;
                                        to = offset * 2;
                                    }


                                    if (to > numberPage)
                                    {
                                        to = numberPage;
                                    }

                                    int i;
                                    for (i = from; i <= to; i++)
                                    {
                                        var parms = new Dictionary<string, string>
                                                                                                                                                                        {
                        { "page",i.ToString()},{"ShoolName",ViewBag.Search}
                            };
                                        if (pageCurrent == i)
                                        {
                                            <li class="active"><a asp-controller="ManagerSchool" asp-action="Index" asp-all-route-data="parms">@i</a></li>
                                        }
                                        else
                                        {
                                            <li><a asp-controller="ManagerSchool" asp-action="Index" asp-all-route-data="parms">@i</a></li>
                                        }

                                    }

                                    if (pageCurrent < numberPage - (to / 2))
                                    {
                                        <li><a>...</a></li>
                                        var LastLink = new Dictionary<string, string> { { "page", numberPage.ToString() } };
                                        <li><a asp-controller="ManagerSchool" asp-action="Index" asp-all-route-data="LastLink">Last Link</a></li>
                                    }

                                    if (pageCurrent < numberPage)
                                    {
                                        int nextPage = pageCurrent + 1;
                                        var NextLink = new Dictionary<string, string> { { "page", nextPage.ToString() } };
                                        <li><a asp-controller="ManagerSchool" asp-action="Index" asp-all-route-data="NextLink">Next Link</a></li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>

                </form>
            </div>
        </div>
        <div class="position-fixed end-0 mt-5 pt-2 " style="z-index: 11">
            <div id="liveToast" class="toast hide bg-success text-white p-2" role="alert" aria-live="assertive" aria-atomic="true">
                Cập nhật thành công
            </div>
        </div>
        <div class="position-fixed end-0 mt-5 pt-2 " style="z-index: 11">
            <div id="livefail" class="toast hide bg-danger text-white p-2" role="alert" aria-live="assertive" aria-atomic="true">
                Cập nhật thất bại
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $("#tbbody").hide();
        function readURL(event) {

            var file = event.files[0];
            var reader = new FileReader();
            var excelData = [];
            var maphong1 = event.title;

            reader.onload = function (event) {
                var data = event.target.result;
                var workbook = XLSX.read(data, {
                    type: 'binary'
                }); $("#tbbody").empty();
                workbook.SheetNames.forEach(function (sheetName) {
                    // Here is your object
                    var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    var arr = [];
                    console.log(XL_row_object);

                    for (var i = 1; i < XL_row_object.length; i++) {
                        arr.push({
                            idConscious: XL_row_object[i]["__EMPTY"],
                            NameConscious: XL_row_object[i]["__EMPTY_1"],
                            idDistrict: XL_row_object[i]["__EMPTY_2"],
                            NameDistrict: XL_row_object[i]["__EMPTY_3"],
                            NameShool: XL_row_object[i]["__EMPTY_5"],
                            idShool: XL_row_object[i]["__EMPTY_4"],
                            Adrees: (XL_row_object[i]["__EMPTY_6"] ? XL_row_object[i]["__EMPTY_6"] : ""),
                            Area: XL_row_object[i]["__EMPTY_7"],
                        })


                    }
                    if (arr.length > 2) {
                        $.ajax({
                            url: "/ManagerSchool/Import",
                            type: 'POST',
                            data: { ViewSchool: JSON.stringify(arr) },
                            success: function (data) {
                                //...
                                window.location = "/ManagerSchool/ViewExcel"

                            }
                        });
                    }
                })
            }; reader.onerror = function (ex) {
                console.log(ex);
            };
            reader.readAsBinaryString(file);

        }

        $(document).ready(function () {
            $("#tbbody").show();
            $(document).on('click', "button[name = 'Delete']", function () {
                let id = $(this).closest('tr').attr("id").trim();
                let tr = $(this).closest('tr');
                swal({
                    title: 'Bạn có chắn chắn xóa hay không ?',
                    text: "Nếu bạn xóa dữ liệu sẽ không được khôi phục lại được !",
                    type: 'warning',
                    buttons: {
                        cancel: {
                            visible: true,
                            text: 'Hủy bỏ',
                            className: 'btn btn-danger'
                        },
                        confirm: {
                            text: 'Đồng ý',
                            className: 'btn btn-success'
                        }
                    }
                }).then((willDelete) => {
                    if (willDelete) {
                        $.ajax({
                            async: false,
                            url: "/ManagerSchool/DeleteShool/" + id,
                            type: 'GET',
                        }).done(function (res) {
                            console.log(res)
                            if (res.success) {
                                $(tr).empty()
                                swal("Xóa thành công", {
                                    icon: "success",
                                    buttons: {
                                        confirm: {
                                            className: 'btn btn-success'
                                        }
                                    }
                                });
                            }
                            else {
                                swal("Thất bại!", res.message, {
                                    icon: "error",
                                    buttons: {
                                        confirm: {
                                            className: 'btn btn-success'
                                        }
                                    },
                                });
                            }
                        });

                    }
                });

       
            
            });
        })


                        // Add Row



    </script>
}